version: '3.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
  broker:
    image: confluentinc/cp-kafka:7.3.2
    user: root
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "sensors_topic:1:1, sensor_readings_topic:3:1, output:1:1"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
  streamlit:
    build:
      dockerfile: web_ui/Dockerfile
      context: ./
    hostname: web_ui
    ports:
      - "8501:8501"
    depends_on:
      - spark_api
    healthcheck:
      test: curl --fail http://spark_api:8000/sensor_data/health || exit 1
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 5s
  spark_api:
    build:
      dockerfile: api/Dockerfile
      context: ./
    hostname: spark_api
    ports:
      - "8000:8000"
    depends_on:
      - broker
      - spark-worker
    environment:
      - PYSPARK_SUBMIT_ARGS="pyspark-shell"
  sensors_producers:
    build:
      dockerfile: sensors_producers/Dockerfile
      context: ./
    hostname: sensors_producers
    depends_on:
      - broker
  spark-master:
    image: bitnami/spark:3.3.2
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'
  spark-worker:
    image: bitnami/spark:3.3.2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_DRIVER_HOST=172.18.0.5
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8081:8081'
    depends_on:
      - spark-master

